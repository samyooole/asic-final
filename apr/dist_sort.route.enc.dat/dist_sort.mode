if {![namespace exists ::IMEX]} { namespace eval ::IMEX {} }
set ::IMEX::dataVar [file dirname [file normalize [info script]]]
set ::IMEX::libVar ${::IMEX::dataVar}/libs

catch { setDesignMode -topRoutingLayer M3 }
catch { setAnalysisMode -analysisType single }
catch { setAnalysisMode -checkType setup }
catch { setAnalysisMode -clkSrcPath true }
catch { setAnalysisMode -clockPropagation sdcControl }
catch { setAnalysisMode -skew true }
catch { setOptMode -opt_view_pruning_hold_views_active_list { default_hold_view } }
catch { setOptMode -opt_view_pruning_setup_views_active_list { default_setup_view } }
catch { setOptMode -opt_all_end_points true }
catch { setOptMode -opt_view_pruning_hold_views_persistent_list { default_hold_view} }
catch { setOptMode -opt_view_pruning_setup_views_persistent_list { default_setup_view} }
catch { setOptMode -opt_view_pruning_tdgr_setup_views_persistent_list { default_setup_view} }
catch { setOptMode -opt_view_pruning_hold_target_slack_auto_flow 0 }
catch { setOptMode -opt_consider_routing_congestion true }
catch { setOptMode -opt_drv_margin 0 }
catch { setOptMode -opt_drv true }
catch { setOptMode -opt_fix_fanout_load true }
catch { setOptMode -opt_hold_allow_setup_tns_degradation false }
catch { setOptMode -opt_post_route_fix_si_transitions true }
catch { setOptMode -opt_resize_flip_flops true }
catch { setOptMode -opt_preserve_all_sequential false }
catch { setOptMode -opt_setup_target_slack 0 }
catch { setOptMode -opt_skew false }
catch { setPathGroupOptions reg2reg -effortLevel high -weight 2 }
catch { setPathGroupOptions reg2reg -late -slackAdjustment -0 }
catch { setExtractRCMode  -engine preRoute }
catch {setNanoRouteMode -quiet -route_detail_end_iteration 20}
catch {setNanoRouteMode -quiet -route_detail_fix_antenna false}
catch {setNanoRouteMode -quiet -route_detail_minimize_litho_effect_on_layer "t t t t t t t t t t"}
catch {setNanoRouteMode -quiet -route_detail_use_lef_pin_taper_rule true}
catch {setNanoRouteMode -quiet -extract_rc_model_file "${::IMEX::libVar}/misc/rc_model.bin"}
catch {setNanoRouteMode -quiet -route_extract_third_party_compatible false}
catch {setNanoRouteMode -quiet -route_global_exp_timing_driven_std_delay 4.300000}
catch {setNanoRouteMode -quiet -route_global_exp_timing_driven_use_tif_timing_engine_for_import_design false}
catch {setNanoRouteMode -quiet -route_bottom_routing_layer 2}
catch {setNanoRouteMode -quiet -route_fix_clock_nets true}
catch {setNanoRouteMode -quiet -route_exp_design_mode_top_routing_layer 3}
catch {setNanoRouteMode -quiet -route_top_routing_layer 3}
catch {setNanoRouteMode -quiet -route_with_si_driven false}
catch {setNanoRouteMode -quiet -route_with_timing_driven true}
catch {setNanoRouteMode -quiet -route_with_via_in_pin "true"}
catch {setNanoRouteMode -quiet -timingEngine ".timing_file_1090489.tif.gz"}

catch { setPlaceMode -place_global_cong_effort high }
catch { setPlaceMode -place_global_reorder_scan false }
catch { setPlaceMode -place_global_timing_effort high }
catch { setIlmMode -keepHighFanoutPorts true -keepLoopBack false -keepInstInSdc false -keepFlatten true }
catch { setViaGenMode -bar_cut_orientation vertical }
catch { setViaGenMode -viarule_preference {M6_M5widePWR1p152 M5_M4widePWR0p864 M4_M3widePWR0p864} }
catch { setDelayCalMode -enable_high_fanout true }
catch { setDelayCalMode -enable_ideal_seq_async_pins false }
catch { setDelayCalMode -eng_enablePrePlacedFlow false }
catch { setDelayCalMode -engine aae }
catch { setDelayCalMode -ignoreNetLoad false }
catch { setDelayCalMode -socv_accuracy_mode low }
catch { setPinAssignMode -maxLayer 3 }
catch { setPinAssignMode -pinEditInBatch false }
catch { setImportMode -discardFloatingVNets false }
catch { setImportMode -keepEmptyModule true }
catch { setSIMode -separate_delta_delay_on_data true }
catch { setRouteMode -earlyGlobalMaxRouteLayer 3 }
catch { setRouteMode -earlyGlobalRouteSecondPG false }
catch { setFPlanMode -cellsForExtraSites {} }
catch { setFPlanMode -defaultRowPatternSite {} }
catch { setFPlanMode -disableEolBlockageOnEdges {} }
catch { setFPlanMode -extraRowPattern {} }
catch { setFPlanMode -extraSites {} }
catch { setFPlanMode -firstRowSiteIndex 0 }
catch { setFPlanMode -ignore_check_power_domain_overlap {} }
catch { setFPlanMode -lastRowSiteIndex -1 }
catch { setFPlanMode -maxIoHeight false }
catch { setFPlanMode -place_check_ignore_fixed_cell_list {} }
catch { setFPlanMode -powerRailLayer {} }
catch { setFPlanMode -skipViolations {} }
